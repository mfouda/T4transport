% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BaryProximal.R
\name{BaryProximal}
\alias{BaryProximal}
\title{Barycenter of Empirical Measures with Fixed Support via Proximal Algorithm}
\usage{
BaryProximal(
  support,
  measures,
  marginals = NULL,
  weights = NULL,
  p = 2,
  beta = 0.1,
  L = 1,
  method = c("exact", "inexact"),
  maxiter = 496,
  abstol = 1e-05,
  print.progress = TRUE,
  useR = FALSE
)
}
\arguments{
\item{support}{an \eqn{(n \times p)} matrix of fixed support where atoms are stacked as rows, or length-\eqn{n} vector.}

\item{measures}{a length-\eqn{K} list whose elements are \eqn{(n_i \times p)} matrix or length-\eqn{n_i} vector of atoms}

\item{marginals}{marginal distribution for empirical measures; \code{NULL} for uniform weights or it should be a length-\eqn{K} list whose elements are length-\eqn{n_i} vectors that sum to 1.}

\item{weights}{weights for each individual measures; if \code{NULL}, it is set uniformly as \code{rep(1/K, K)} or a vector of length \eqn{K} should be provided.}

\item{p}{\eqn{p}-norm for computing distances.}

\item{maxiter}{maximum number of iterations as stopping criterion.}

\item{abstol}{threhold for stopping via incremental change of weights.}

\item{print.progress}{a logical; \code{TRUE} to print iteration.}

\item{useR}{if \code{TRUE}, we use \pkg{R} version of code in conjunction with partial \pkg{C++} while \code{FALSE} involves pure \pkg{C++} implementation.}
}
\value{
a length-\eqn{n} vector of weights for atoms from \code{support}.
}
\description{
Barycenter of Empirical Measures with Fixed Support via Proximal Algorithm
}
\examples{
## simple example
#  empirical measures are created from N(0,I) in R^2
measures = list()
for (k in 1:10){
   ni = round(stats::runif(1, min=0.05, max=1)*100)
   measures[[k]] = matrix(rnorm(ni*2, mean=-1),ncol=2)
}
for (k in 11:20){
   ni = round(stats::runif(1, min=0.05, max=1)*100)
   measures[[k]] = matrix(rnorm(ni*2, mean=1),ncol=2)
}

# fixed support of 100 atoms 
# where domain variables are drawn from U(-3,3)
support = matrix(rnorm(100*2, sd=2), ncol=2)

# run
out1 = BaryProximal(support, measures, maxiter=500, useR=TRUE)
out2 = BaryProximal(support, measures, maxiter=500, useR=FALSE)

par(mfrow=c(2,2))
plot(as.vector(out1))
plot(as.vector(out2))

p1 = as.vector(out1)
p2 = as.vector(out2)
id1 = sample(1:nrow(support), 50, prob=p1, replace=TRUE)
id2 = sample(1:nrow(support), 50, prob=p2, replace=TRUE)
plot(support[id1,])
plot(support[id2,])


}
