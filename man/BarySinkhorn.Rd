% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BarySinkhorn.R
\name{BarySinkhorn}
\alias{BarySinkhorn}
\title{Regularized Barycenter of Empirical Measures with Fixed Support via Sinkhorn Distance}
\usage{
BarySinkhorn(
  support,
  measures,
  marginals = NULL,
  weights = NULL,
  lambda = 0.1,
  p = 2,
  maxiter = 496,
  abstol = 1e-05,
  print.progress = TRUE,
  useR = TRUE
)
}
\arguments{
\item{support}{an \eqn{(n \times p)} matrix of fixed support where atoms are stacked as rows, or length-\eqn{n} vector.}

\item{measures}{a length-\eqn{K} list whose elements are \eqn{(n_i \times p)} matrix or length-\eqn{n_i} vector of atoms}

\item{marginals}{marginal distribution for empirical measures; \code{NULL} for uniform weights or it should be a length-\eqn{K} list whose elements are length-\eqn{n_i} vectors that sum to 1.}

\item{weights}{weights for each individual measures; if \code{NULL}, it is set uniformly as \code{rep(1/K, K)} or a vector of length \eqn{K} should be provided.}

\item{lambda}{regularization parameter. If too small, it will lead to earlier break due to numerical precision issue.}

\item{p}{\eqn{p}-norm for computing distances.}

\item{maxiter}{maximum number of iterations as stopping criterion.}

\item{abstol}{threhold for stopping via incremental change of weights.}

\item{print.progress}{a logical; \code{TRUE} to print iteration.}

\item{useR}{if \code{TRUE}, we use \pkg{R} version of code in conjunction with partial \pkg{C++} while \code{FALSE} involves pure \pkg{C++} implementation.}
}
\value{
a length-\eqn{n} vector of weights for atoms from \code{support}.
}
\description{
Regularized Barycenter of Empirical Measures with Fixed Support via Sinkhorn Distance
}
\examples{
## example : two sets of empirical measures from Gaussians
#            whose means are (1,1) and (-1,-1).
measures = list()
for (k in 1:10){
   ni = round(stats::runif(1, min=0.05, max=1)*100)
   measures[[k]] = matrix(rnorm(ni*2, mean=-1),ncol=2)
}
for (k in 11:20){
   ni = round(stats::runif(1, min=0.05, max=1)*100)
   measures[[k]] = matrix(rnorm(ni*2, mean=1),ncol=2)
}

# fixed support of 100 atoms 
# where domain variables are drawn from N(0,9I)
support = matrix(rnorm(100*2, sd=3), ncol=2)

# try different regularization levels
out1 = BarySinkhorn(support, measures, maxiter=100, lambda=0.1)
out2 = BarySinkhorn(support, measures, maxiter=100, lambda=0.5)
out3 = BarySinkhorn(support, measures, maxiter=100, lambda=1)

# visualize
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3))
plot(1:100, out1, "b", pty=19, ylim=c(0,0.15), main="lambda=0.1")
plot(1:100, out2, "b", pty=19, ylim=c(0,0.15), main="lambda=0.5")
plot(1:100, out3, "b", pty=19, ylim=c(0,0.15), main="lambda=1")
par(opar)

}
