% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Proximal.R
\name{Proximal}
\alias{Proximal}
\title{Proximal Point Algorithm}
\usage{
Proximal(
  dxy,
  p = 1,
  wx = NULL,
  wy = NULL,
  beta = 0.1,
  L = 1,
  method = c("inexact", "exact"),
  maxiter = 496,
  abstol = 1e-06,
  print.progress = FALSE
)
}
\description{
Proximal Point Algorithm
}
\examples{
## create two small datasets from bivariate normal
m = 20
n = 10
X = matrix(rnorm(m*2),ncol=2) # m obs. for X
Y = matrix(rnorm(n*2),ncol=2) # n obs. for Y

## compute cross-distance between X and Y
dXY = array(0,c(m,n))
for (i in 1:m){
  vx = as.vector(X[i,])
  for (j in 1:n){
    vy  = as.vector(Y[j,])
    dXY[i,j] = sqrt(sum((vx-vy)^2))
  }
}

## use several betas for exact and inexact algorithms
outE1 = Proximal(dXY, beta=0.01, method="exact")
outE2 = Proximal(dXY, beta=0.05, method="exact")
outE3 = Proximal(dXY, beta=0.10, method="exact")
outI1 = Proximal(dXY, beta=0.01, method="inexact")
outI2 = Proximal(dXY, beta=0.05, method="inexact")
outI3 = Proximal(dXY, beta=0.10, method="inexact")

## visualize
#  distances
dE1 = round(outE1$distance, 3) # exact distances
dE2 = round(outE2$distance, 3)
dE3 = round(outE3$distance, 3)
dI1 = round(outI1$distance, 3) # inexact distances
dI2 = round(outI2$distance, 3)
dI3 = round(outI3$distance, 3)

#  show the transport plans and computed distance
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,3))
image(outE1$plan,main=paste0("beta=0.01:",dE1), xlab="Exact")
image(outE2$plan,main=paste0("beta=0.05:",dE2), xlab="Exact")
image(outE3$plan,main=paste0("beta=0.10:",dE3), xlab="Exact")
image(outI1$plan,main=paste0("beta=0.01:",dI1), xlab="Inexact")
image(outI2$plan,main=paste0("beta=0.05:",dI2), xlab="Inexact")
image(outI3$plan,main=paste0("beta=0.10:",dI3), xlab="Inexact")
par(opar)

}
